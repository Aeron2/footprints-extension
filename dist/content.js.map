{"version":3,"file":"content.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://footprints-extension/./src/content/content.js"],"sourcesContent":["const messageBox = document.createElement(\"div\");\r\nmessageBox.style.backgroundColor = \"hsla(220, 62%, 45%)\";\r\nmessageBox.style.color = \"white\";\r\nmessageBox.style.padding = \"5px\";\r\nmessageBox.style.borderRadius = \"5px\";\r\nmessageBox.style.zIndex = \"1000\";\r\nmessageBox.style.cursor = \"pointer\";\r\nmessageBox.innerText = \"Footprint it!\";\r\nmessageBox.id = \"messageBox\";\r\nmessageBox.style.display = \"none\";\r\ndocument.body.appendChild(messageBox);\r\n\r\nlet clicked = false;\r\n\r\nfunction showMessageBox(e) {\r\n  clicked = true;\r\n  const range = window.getSelection().getRangeAt(0);\r\n  const rect = range.getBoundingClientRect();\r\n  messageBox.style.top = `${rect.bottom + window.scrollY}px`;\r\n  messageBox.style.left = `${rect.left + window.scrollX}px`;\r\n  messageBox.style.position = \"absolute\";\r\n  messageBox.style.display = \"block\";\r\n}\r\n\r\nfunction hideMessageBox() {\r\n  clicked = false;\r\n  messageBox.style.display = \"none\";\r\n}\r\n\r\ndocument.addEventListener(\"mouseup\", (e) => {\r\n  let selectedText = window.getSelection().toString();\r\n  if (selectedText.length > 0) {\r\n    showMessageBox(e);\r\n\r\n    messageBox.addEventListener(\"click\", (e) => {\r\n      //   if (e.target.id === \"messageBox\") {\r\n      chrome.runtime.sendMessage({\r\n        message: \"selected_text\",\r\n        data: selectedText,\r\n      });\r\n      hideMessageBox();\r\n      //   } else {\r\n      hideMessageBox();\r\n      //   }\r\n    });\r\n  } else {\r\n    hideMessageBox();\r\n  }\r\n});\r\n\r\nfunction displayImageInFullScreen(image) {\r\n  // Create a full-screen container element\r\n  let isSelecting = false;\r\n  let startX, startY, endX, endY;\r\n  var fullscreenContainer = document.createElement(\"div\");\r\n  fullscreenContainer.style.position = \"fixed\";\r\n  fullscreenContainer.style.top = \"0\";\r\n  fullscreenContainer.style.left = \"0\";\r\n  fullscreenContainer.style.width = \"100vw\";\r\n  fullscreenContainer.style.height = \"100vh\";\r\n  fullscreenContainer.style.backgroundColor = \"rgba(0, 0, 0, 0.7)\";\r\n  // fullscreenContainer.style.display = \"flex\";\r\n  // fullscreenContainer.style.alignItems = \"center\";\r\n  // fullscreenContainer.style.justifyContent = \"center\";\r\n  fullscreenContainer.style.zIndex = \"9999\";\r\n  fullscreenContainer.id = \"fullscreenContainer\";\r\n\r\n  var selectionArea = document.createElement(\"div\");\r\n  selectionArea.id = \"selectionArea\";\r\n\r\n  // Create an image element\r\n  var imageElement = document.createElement(\"canvas\");\r\n  const ctx = imageElement.getContext(\"2d\");\r\n  imageElement.style.display = \"block\";\r\n  imageElement.style.position = \"absolute\";\r\n  imageElement.style.top = \"0px\";\r\n  imageElement.style.left = \"0px\";\r\n\r\n  const img = new Image();\r\n\r\n  img.src = image;\r\n\r\n  console.log(image);\r\n\r\n  const scrollbarWidth =\r\n    window.innerWidth - document.documentElement.clientWidth;\r\n  img.onload = function () {\r\n    imageElement.height = img.height;\r\n    imageElement.width = img.width;\r\n    ctx.drawImage(\r\n      img,\r\n      0,\r\n      0,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n      // \"100vw\",\r\n      // \"100vh\"\r\n      // 0,\r\n      // 0,\r\n    );\r\n  };\r\n  imageElement.style.cursor = \"crosshair\";\r\n  imageElement.id = \"image\";\r\n\r\n  selectionArea.style.outline = \"2px dashed #000\";\r\n  selectionArea.style.display = \"block\";\r\n  selectionArea.style.position = \"absolute\";\r\n  selectionArea.style.top = \"0px\";\r\n  selectionArea.style.left = \"0px\";\r\n\r\n  // Add the image element to the full-screen container\r\n  fullscreenContainer.appendChild(imageElement);\r\n  fullscreenContainer.appendChild(selectionArea);\r\n\r\n  // Add the full-screen container to the DOM\r\n  document.body.appendChild(fullscreenContainer);\r\n\r\n  fullscreenContainer.addEventListener(\"mousedown\", (e) => {\r\n    isSelecting = true;\r\n    startX = e.clientX - fullscreenContainer.getBoundingClientRect().left;\r\n    startY = e.clientY - fullscreenContainer.getBoundingClientRect().top;\r\n  });\r\n\r\n  fullscreenContainer.addEventListener(\"mousemove\", (e) => {\r\n    if (!isSelecting) return;\r\n\r\n    endX = e.clientX - fullscreenContainer.getBoundingClientRect().left;\r\n    endY = e.clientY - fullscreenContainer.getBoundingClientRect().top;\r\n\r\n    // Update the selection area position and size\r\n    selectionArea.style.left = Math.min(startX, endX) + \"px\";\r\n    selectionArea.style.top = Math.min(startY, endY) + \"px\";\r\n    selectionArea.style.width = Math.abs(startX - endX) + \"px\";\r\n    selectionArea.style.height = Math.abs(startY - endY) + \"px\";\r\n  });\r\n\r\n  document.addEventListener(\"mouseup\", (e) => {\r\n    isSelecting = false;\r\n    endX = e.clientX - fullscreenContainer.getBoundingClientRect().left;\r\n    endY = e.clientY - fullscreenContainer.getBoundingClientRect().top;\r\n\r\n    console.log(startX, endX, startY, endY);\r\n    // Calculate the selected area's dimensions and position\r\n    const x = Math.min(startX, endX);\r\n    const y = Math.min(startY, endY);\r\n    const width = Math.abs(startX - endX);\r\n    const height = Math.abs(startY - endY);\r\n\r\n    // Crop the image based on the selected area\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    ctx.drawImage(img, x, y, width, height);\r\n\r\n    // Display the cropped image\r\n    const croppedImage = new Image();\r\n    croppedImage.src = canvas.toDataURL();\r\n\r\n    console.log(croppedImage.src);\r\n    document.body.removeChild(fullscreenContainer);\r\n  });\r\n}\r\n\r\nchrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {\r\n  if (message.message === \"save_screenshot\") {\r\n    displayImageInFullScreen(message.data);\r\n  }\r\n});\r\n\r\n// document.addEventListener(\"mousedown\", (e) => {\r\n//   hideMessageBox();\r\n// });\r\n\r\n// document.addEventListener(\"click\", (e) => {\r\n//   if (clicked && e.target.id !== \"messageBox\") {\r\n//     hideMessageBox();\r\n//   }\r\n// });\r\n"],"names":[],"sourceRoot":""}